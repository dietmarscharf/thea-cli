{
  "version": "2.0",
  "metadata": {
    "file": {
      "pdf_path": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf",
      "pdf_absolute_path": "/mnt/c/Projects/THEA/docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf",
      "pdf_size_bytes": 97999,
      "pdf_pages": 0,
      "output_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023800.gemma3.27b.pdf-extract-docling.thea_extract"
    },
    "processing": {
      "timestamp": "20250903_023800",
      "start_time": "2025-09-03T02:38:00.628712Z",
      "end_time": "2025-09-03T02:38:22.361796Z",
      "processing_time_seconds": 21.73168659210205,
      "hostname": "BLUEITS-DS-Privat",
      "platform": "linux",
      "pipeline": "pdf-extract-docling",
      "pipeline_metadata": {
        "pipeline": "pdf-extract-docling",
        "timestamp": "2025-09-03T02:37:55.786609Z",
        "pdf_path": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf",
        "extractor": "docling",
        "fallback_model": "gemma3:27b",
        "save_sidecars": true,
        "saved_files": [
          {
            "extractor": "docling",
            "type": "text/plain",
            "text_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023755.gemma3.27b.pdf-extract-docling.docling.txt",
            "json_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023755.gemma3.27b.pdf-extract-docling.docling.json",
            "confidence": 0.9500000000000001,
            "character_count": 11738,
            "file_size": 11807,
            "md_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023755.gemma3.27b.pdf-extract-docling.docling.md"
          }
        ],
        "extraction_success": true,
        "text_length": 11738,
        "confidence": 0.9500000000000001,
        "has_tables": true,
        "has_formulas": false,
        "document_type": "invoice",
        "pages": 5
      }
    },
    "model": {
      "name": "gemma3:27b",
      "endpoint": "https://b1s.hey.bahn.business/api/chat",
      "stream": true,
      "format": "json"
    }
  },
  "settings": {
    "mode": "skip",
    "suffix": "pdf-extract-docling",
    "prompt_file": "prompts/pdf-extract-docling.prompt",
    "save_sidecars": true,
    "dpi": 300,
    "max_attempts": 3,
    "initial_temperature": 0.2,
    "temperature_progression": [
      0.2
    ],
    "timeout": 300,
    "max_tokens": 50000
  },
  "execution": {
    "retry_count": 0,
    "final_temperature": 0.2,
    "stuck_pattern_detected": false,
    "pattern_type": null,
    "chunks_received": 592,
    "request_time_seconds": 21.731532096862793,
    "files_processed": [
      {
        "extractor": "docling",
        "type": "text/plain",
        "text_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023755.gemma3.27b.pdf-extract-docling.docling.txt",
        "json_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023755.gemma3.27b.pdf-extract-docling.docling.json",
        "confidence": 0.9500000000000001,
        "character_count": 11738,
        "file_size": 11807,
        "md_file": "docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf.20250903_023755.gemma3.27b.pdf-extract-docling.docling.md"
      }
    ]
  },
  "prompt": {
    "system": "You are a vision-based text extractor and analyzer. Always use <thinking></thinking> tags to show your analysis process. You are analyzing structured content extracted from a PDF using Docling's deep learning models. The extraction includes document structure, tables, formulas, and layout information. Analyze the content to: 1) Verify and enhance the extracted text. 2) Count total characters. 3) Classify the document type. 4) Provide a three-word description. 5) Summarize the content. Focus on accuracy and completeness. Output ONLY valid JSON without any thinking tags or additional text. Analyze the Docling extraction and output ONLY the JSON structure. No thinking tags, no explanations, just JSON starting with { and ending with }.: {\"extracted_text\": \"<string (complete verified text from document)>\", \"character_count\": \"<number (exact count of extracted text)>\", \"document_type\": \"<string (e.g., Invoice, Contract, Report, Statement, Technical)>\", \"three_word_description_german\": \"<string (exactly 3 words)>\", \"three_word_description_english\": \"<string (exactly 3 words)>\", \"content_summary_german\": \"<string (2-3 sentences)>\", \"content_summary_english\": \"<string (2-3 sentences)>\", \"extraction_quality\": \"<string (excellent/good/fair/poor)>\", \"has_tables\": \"<boolean>\", \"has_formulas\": \"<boolean>\", \"document_sections\": \"<array of strings (main section headings if present)>\"}",
    "user": "Analyze the Docling extraction from PDF 'docs/Ramteid-Girokonto-21377502/Konto_0021377502-Auszug_2022_0012.pdf'. The document has been processed using deep learning models. Verify the extraction, count characters, classify the document, and provide summaries. Output only JSON.",
    "prompt_file": "prompts/pdf-extract-docling.prompt",
    "prompt_config": {
      "version": "2.0",
      "name": "pdf-extract-docling",
      "description": "Advanced document extraction using Docling with gemma3:27b fallback for complex documents",
      "system_prompt": {
        "suffix": "You are analyzing structured content extracted from a PDF using Docling's deep learning models. The extraction includes document structure, tables, formulas, and layout information. Analyze the content to: 1) Verify and enhance the extracted text. 2) Count total characters. 3) Classify the document type. 4) Provide a three-word description. 5) Summarize the content. Focus on accuracy and completeness. Output ONLY valid JSON without any thinking tags or additional text.",
        "output_format": {
          "type": "json",
          "schema": {
            "extracted_text": "string (complete verified text from document)",
            "character_count": "number (exact count of extracted text)",
            "document_type": "string (e.g., Invoice, Contract, Report, Statement, Technical)",
            "three_word_description_german": "string (exactly 3 words)",
            "three_word_description_english": "string (exactly 3 words)",
            "content_summary_german": "string (2-3 sentences)",
            "content_summary_english": "string (2-3 sentences)",
            "extraction_quality": "string (excellent/good/fair/poor)",
            "has_tables": "boolean",
            "has_formulas": "boolean",
            "document_sections": "array of strings (main section headings if present)"
          },
          "instructions": "Analyze the Docling extraction and output ONLY the JSON structure. No thinking tags, no explanations, just JSON starting with { and ending with }."
        }
      },
      "user_prompt": {
        "template": "Analyze the Docling extraction from PDF '{{pdf_path}}'. The document has been processed using deep learning models. Verify the extraction, count characters, classify the document, and provide summaries. Output only JSON."
      },
      "settings": {
        "model": "gemma3:27b",
        "temperature": 0.2,
        "max_attempts": 3,
        "timeout": 300,
        "max_tokens": 50000,
        "mode": "skip",
        "save_sidecars": true,
        "format": "json",
        "pipeline": "pdf-extract-docling",
        "pipeline_config": {
          "use_fallback_model": true,
          "fallback_model": "gemma3:27b"
        },
        "endpoint_url": "https://b1s.hey.bahn.business/api/chat"
      }
    }
  },
  "response": {
    "text": "{\"response\": \"Here's a breakdown of the provided JSON data, representing a bank statement (Kontoauszug) for Ramteid GmbH:\\n\\n**1. Overall Document Information:**\\n\\n*   **document_type:** \\\"invoice\\\" (While technically a bank statement, the system has categorized it as an invoice. This might be due to the structured data extraction focusing on financial details.)\\n*   **text_length:** 11738 characters\\n*   **pages:** 5\\n*   **extraction_time:** 4.83 seconds\\n\\n**2. Metadata:**\\n\\n*   **sections:** The document is divided into sections like \\\"Kontoauszug 12/2022\\\" (December 2022 Statement), account details, and \\\"Hinweise zum Kontoauszug\\\" (Notes on the Statement).\\n*   **tables:**  The system identified two tables within the document (Table 1 and Table 2). These likely represent the transaction details within the statement.\\n*   **has_tables:** True\\n*   **has_formulas:** False\\n\\n**3. Sections (Key Content Areas):**\\n\\n*   **Kontoauszug 12/2022:** This is the main heading indicating the statement period (December 2022).\\n*   **Girokonto 21377502, DE51 7525 0000 0021 3775 02:** This section details the account number and IBAN of Ramteid GmbH.\\n*   **Girokonto 21377502, DE51 7525 0000 0021 3775 02, Ramteid GmbH:**  This reiterates the account details and explicitly states the account holder.\\n*   **Hinweise zum Kontoauszug:** This section contains important notes and disclaimers regarding the statement, such as how to report discrepancies, the validity of the statement without a signature, and information about deposit insurance.\\n\\n**4. Tables:**\\n\\n*   **Table 1 & Table 2:** These tables likely contain the detailed transaction history for the account, including dates, descriptions, and amounts. The JSON doesn't provide the actual table data, only that they exist.\\n\\n**In summary:**\\n\\nThe JSON represents a structured extraction of data from a 5-page bank statement for Ramteid GmbH. It identifies key sections, the presence of tables (transaction details), and provides metadata about the document processing. The actual transaction data within the tables is not included in this JSON snippet.\"}",
    "thinking": null,
    "json": {
      "response": "Here's a breakdown of the provided JSON data, representing a bank statement (Kontoauszug) for Ramteid GmbH:\n\n**1. Overall Document Information:**\n\n*   **document_type:** \"invoice\" (While technically a bank statement, the system has categorized it as an invoice. This might be due to the structured data extraction focusing on financial details.)\n*   **text_length:** 11738 characters\n*   **pages:** 5\n*   **extraction_time:** 4.83 seconds\n\n**2. Metadata:**\n\n*   **sections:** The document is divided into sections like \"Kontoauszug 12/2022\" (December 2022 Statement), account details, and \"Hinweise zum Kontoauszug\" (Notes on the Statement).\n*   **tables:**  The system identified two tables within the document (Table 1 and Table 2). These likely represent the transaction details within the statement.\n*   **has_tables:** True\n*   **has_formulas:** False\n\n**3. Sections (Key Content Areas):**\n\n*   **Kontoauszug 12/2022:** This is the main heading indicating the statement period (December 2022).\n*   **Girokonto 21377502, DE51 7525 0000 0021 3775 02:** This section details the account number and IBAN of Ramteid GmbH.\n*   **Girokonto 21377502, DE51 7525 0000 0021 3775 02, Ramteid GmbH:**  This reiterates the account details and explicitly states the account holder.\n*   **Hinweise zum Kontoauszug:** This section contains important notes and disclaimers regarding the statement, such as how to report discrepancies, the validity of the statement without a signature, and information about deposit insurance.\n\n**4. Tables:**\n\n*   **Table 1 & Table 2:** These tables likely contain the detailed transaction history for the account, including dates, descriptions, and amounts. The JSON doesn't provide the actual table data, only that they exist.\n\n**In summary:**\n\nThe JSON represents a structured extraction of data from a 5-page bank statement for Ramteid GmbH. It identifies key sections, the presence of tables (transaction details), and provides metadata about the document processing. The actual transaction data within the tables is not included in this JSON snippet."
    }
  },
  "statistics": {
    "tokens": {
      "input_estimated": 3713,
      "output_estimated": 532,
      "total_estimated": 4245,
      "tokens_per_second": 24.480382493337853
    },
    "characters": {
      "response_total": 2128,
      "extracted_text": 0,
      "json_formatted": 2132
    }
  },
  "errors": [],
  "warnings": []
}